import axios from 'axios';

const API_URL = 'http://localhost:3000'; // Thay b·∫±ng URL th·ª±c t·∫ø c·ªßa b·∫°n

// H√†m th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
export const addToCart = async (ProductId, Quantity) => {
  try {
    const response = await axios.post(`${API_URL}/cartitem/cartitems`, { ProductId, Quantity }, {
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`
      }
    });
    return response.data; // Tr·∫£ v·ªÅ d·ªØ li·ªáu t·ª´ API
  } catch (error) {
    console.error('L·ªói khi th√™m v√†o gi·ªè h√†ng:', error);
    throw error; // N√©m l·ªói ƒë·ªÉ x·ª≠ l√Ω ·ªü component
  }
};

export const getCartItems = async () => {
  try {
    const response = await axios.get(`${API_URL}/cartitem/cartitems`, {
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`
      }
    });
    return response.data || [];
  } catch (error) {
    // üëá N·∫øu server tr·∫£ v·ªÅ l·ªói 404 (gi·ªè h√†ng tr·ªëng), tr·∫£ v·ªÅ m·∫£ng r·ªóng
    if (error.response && error.response.status === 404) {
      return [];
    }
    console.error('L·ªói khi l·∫•y gi·ªè h√†ng:', error);
    throw error;
  }
};


export const updateCartItemQuantity = async (ProductId, newQuantity) => {
    try {
      const response = await axios.post(`${API_URL}/cartitem/update`, {
        ProductId,
        newQuantity
      }, {
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('token')}`
        }
      });
      return response.data;  // Tr·∫£ v·ªÅ th√¥ng b√°o th√†nh c√¥ng v√† th√¥ng tin gi·ªè h√†ng
    } catch (error) {
      console.error('L·ªói khi c·∫≠p nh·∫≠t gi·ªè h√†ng:', error);
      throw error;
    }
  };

  export const deleteCartItem = async (ProductId) => {
    try {
      const response = await axios.delete(`${API_URL}/cartitem/delete`, {
        data: { ProductId },  // G·ª≠i d·ªØ li·ªáu d∆∞·ªõi d·∫°ng body
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('token')}`
        }
      });
      return response.data;  // Tr·∫£ v·ªÅ th√¥ng b√°o x√≥a th√†nh c√¥ng
    } catch (error) {
      console.error('L·ªói khi x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng:', error);
      throw error;
    }
  };
  
